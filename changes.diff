diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index e69de29..e34e524 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -0,0 +1,116 @@
+# Contributing to zen
+
+Thank you for considering contributing to zen! This document outlines the process for contributing to the project.
+
+## Code of Conduct
+
+By participating in this project, you agree to maintain a respectful and inclusive environment for everyone. Please be kind and considerate to other contributors.
+
+## Getting Started
+
+1. **Fork the repository** on GitHub
+2. **Clone your fork** locally
+3. **Set up the development environment**:
+   ```bash
+   cd z
+   npm install
+   ```
+4. **Create a new branch** for your changes:
+   ```bash
+   git checkout -b feature/your-feature-name
+   ```
+
+## Development Workflow
+
+### Prerequisites
+
+- Node.js 18+
+- npm
+- Git
+
+### Running the Application
+
+```bash
+npm run start
+```
+
+### Code Style
+
+- Follow the existing code style in the project
+- Use descriptive variable names
+- Comment complex logic
+- Format your code before submitting
+
+## Making Changes
+
+1. Make your changes in your feature branch
+2. Test your changes thoroughly
+3. Update documentation if necessary
+4. Ensure the application still works correctly
+
+## Submitting Changes
+
+1. **Commit your changes** with a clear message:
+   ```bash
+   git commit -am "Add feature: your feature description"
+   ```
+2. **Push to your fork**:
+   ```bash
+   git push origin feature/your-feature-name
+   ```
+3. **Submit a pull request** against the main branch of the original repository
+4. **Describe your changes** in the pull request description:
+   - What did you change?
+   - Why did you change it?
+   - How can someone test your changes?
+
+## Pull Request Process
+
+1. Pull requests should focus on a single feature or bug fix
+2. Ensure your code builds without errors
+3. Update the README.md with details of changes if appropriate
+4. A maintainer will review your pull request and may request changes
+5. Your pull request will be merged once it has been approved
+
+## Reporting Bugs
+
+When reporting bugs, please include:
+
+1. A clear, descriptive title
+2. Steps to reproduce the issue
+3. Expected behavior
+4. Actual behavior
+5. Screenshots if applicable
+6. Your environment details (OS, application version, etc.)
+
+## Feature Requests
+
+Feature requests are welcome! Please provide:
+
+1. A clear description of the feature
+2. The motivation for the feature
+3. How you envision it working
+
+## Specialized Contributions
+
+### Translations
+
+To contribute translations:
+
+1. Add new translation files to the `src/translations` directory
+2. Follow the existing format for translations
+
+### Rust Support
+
+As Zen focuses on Rust development:
+
+1. Improvements to Rust language support are especially welcome
+2. Test thoroughly with various Rust codebases
+
+## License
+
+By contributing to Zen, you agree that your contributions will be licensed under the project's [MIT License](./LICENSE).
+
+## Questions?
+
+If you have questions about contributing, please open an issue with the "question" label.
diff --git a/LICENSE b/LICENSE
index 6bf0947..841463e 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,6 +1,6 @@
 MIT License
 
-Copyright (c) 2025 Z
+Copyright (c) 2025 zen
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff --git a/README.md b/README.md
index c69db75..e623ca0 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,6 @@
-<h1 align="center">z</h1>
+<h1 align="center">zen</h1>
 
-<p align="center">Welcome to Z, a lightweight (maybe) code editor, focusing on speed and clean design.</p>
+<p align="center">Welcome to zen, a lightweight (maybe) code editor, focusing on speed and clean design.</p>
 
 ---
 
@@ -8,10 +8,9 @@
 ### Installation
 
 Currently available for:
-- Windows (Dev state)
-- Linux (Dev state)
-- 
-### Developing Z
+- Windows (Dev state) (unfocus 12.03.2025)
+- Linux (Dev state) (focused now)
+### Developing Zen
 
 Prerequisites:
 - Node.js 18+
@@ -20,10 +19,10 @@ Prerequisites:
 
 ```bash
 # Clone the repository
-git clone https://github.com/femboypig/Z.git
+git clone https://github.com/femboypig/z.git
 
 # Install dependencies
-cd Z
+cd z
 npm install
 
 # Start development
diff --git a/package-lock.json b/package-lock.json
index 0dc22fe..4b45de3 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,11 +1,11 @@
 {
-  "name": "z",
+  "name": "zen",
   "version": "1.0.0",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
-      "name": "z",
+      "name": "zen",
       "version": "1.0.0",
       "license": "ISC",
       "dependencies": {
@@ -13,6 +13,9 @@
         "monaco-editor": "^0.52.2",
         "requirejs": "^2.3.7"
       },
+      "bin": {
+        "zen": "src/main.js"
+      },
       "devDependencies": {
         "electron": "^35.0.0"
       }
diff --git a/package.json b/package.json
index 6a991e9..6116cd8 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "z",
+  "name": "zen",
   "version": "1.0.0",
   "main": "src/main.js",
   "scripts": {
diff --git a/src/about.json b/src/about.json
index e50a811..f2710c5 100644
--- a/src/about.json
+++ b/src/about.json
@@ -2,8 +2,8 @@
   "version": "0.1.0",
   "channel": "dev",
   "fullVersion": "0.1.0-dev",
-  "buildCode": "0.1.0-dev+linux64.20250312.5zr5z1",
-  "buildDate": "2025-03-12",
+  "buildCode": "0.1.0-dev+linux64.20250320.nocmzk",
+  "buildDate": "2025-03-20",
   "os": {
     "windows": false,
     "macos": false,
@@ -13,7 +13,7 @@
   "currentOS": "Arch Linux",
   "architecture": "x64",
   "contributors": [
-    "Z Team"
+    "Zen Team"
   ],
   "repository": "https://github.com/z-editor/z",
   "license": "MIT"
diff --git a/src/index.html b/src/index.html
index 22182d3..fa458b1 100644
--- a/src/index.html
+++ b/src/index.html
@@ -1,15 +1,184 @@
 <!DOCTYPE html>
 <html>
 <head>
-    <title>Z - The Z Editor</title>
+    <title>Zen - The Zen Editor</title>
     <link rel="stylesheet" href="styles.css">
     <!-- Add z-rosetta client script -->
     <script src="translations/z-rosetta-client.js"></script>
     <!-- Monaco Editor scripts -->
     <script src="monaco-editor/vs/loader.js"></script>
     <script src="monaco-init.js"></script>
+    <style>
+        /* Loading overlay styles */
+        .loading-overlay {
+            position: fixed;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            background-color: var(--bg-color, #ffffff);
+            z-index: 9999;
+            display: flex;
+            flex-direction: column;
+            justify-content: center;
+            align-items: center;
+            transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
+        }
+        
+        .loading-overlay.hidden {
+            opacity: 0;
+            visibility: hidden;
+        }
+        
+        /* Zen-inspired loading animation */
+        .zen-loader {
+            position: relative;
+            width: 80px;
+            height: 80px;
+            margin-bottom: 20px;
+            perspective: 800px;
+        }
+        
+        .zen-loader-square {
+            position: absolute;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            transform-style: preserve-3d;
+            animation: zen-rotate 3s ease-in-out infinite;
+        }
+        
+        .zen-loader-face {
+            position: absolute;
+            width: 100%;
+            height: 100%;
+            border: 2px solid var(--accent-color, #007acc);
+            background-color: rgba(0, 122, 204, 0.05);
+            box-sizing: border-box;
+            opacity: 0.7;
+            transition: all 0.3s;
+        }
+        
+        .zen-loader-face:nth-child(1) {
+            transform: translateZ(40px);
+            animation: pulse 2s ease-in-out infinite;
+        }
+        
+        .zen-loader-face:nth-child(2) {
+            transform: rotateY(180deg) translateZ(40px);
+            animation: pulse 2s ease-in-out infinite 0.4s;
+        }
+        
+        .zen-loader-face:nth-child(3) {
+            transform: rotateY(90deg) translateZ(40px);
+            animation: pulse 2s ease-in-out infinite 0.8s;
+        }
+        
+        .zen-loader-face:nth-child(4) {
+            transform: rotateY(-90deg) translateZ(40px);
+            animation: pulse 2s ease-in-out infinite 1.2s;
+        }
+        
+        .zen-loader-face:nth-child(5) {
+            transform: rotateX(90deg) translateZ(40px);
+            animation: pulse 2s ease-in-out infinite 1.6s;
+        }
+        
+        .zen-loader-face:nth-child(6) {
+            transform: rotateX(-90deg) translateZ(40px);
+            animation: pulse 2s ease-in-out infinite 2s;
+        }
+        
+        .zen-loader-inner {
+            position: absolute;
+            top: 25%;
+            left: 25%;
+            width: 50%;
+            height: 50%;
+            background-color: var(--accent-color, #007acc);
+            opacity: 0.8;
+            animation: zen-inner-pulse 2s ease-in-out infinite alternate;
+        }
+        
+        @keyframes zen-rotate {
+            0% {
+                transform: rotateX(0deg) rotateY(0deg);
+            }
+            25% {
+                transform: rotateX(90deg) rotateY(45deg);
+            }
+            50% {
+                transform: rotateX(180deg) rotateY(90deg);
+            }
+            75% {
+                transform: rotateX(270deg) rotateY(135deg);
+            }
+            100% {
+                transform: rotateX(360deg) rotateY(180deg);
+            }
+        }
+        
+        @keyframes pulse {
+            0%, 100% {
+                opacity: 0.2;
+            }
+            50% {
+                opacity: 0.8;
+            }
+        }
+        
+        @keyframes zen-inner-pulse {
+            0% {
+                transform: scale(0.6);
+                opacity: 0.5;
+            }
+            100% {
+                transform: scale(1);
+                opacity: 0.8;
+            }
+        }
+        
+        .loading-text {
+            font-size: 16px;
+            color: var(--text-color, #333333);
+            font-family: 'Zed Mono', monospace;
+            opacity: 0.8;
+            letter-spacing: 2px;
+            animation: text-pulse 2s ease-in-out infinite;
+        }
+        
+        @keyframes text-pulse {
+            0%, 100% {
+                opacity: 0.5;
+            }
+            50% {
+                opacity: 1;
+            }
+        }
+        
+        /* Hide main content initially */
+        .main-layout.loading {
+            visibility: hidden;
+        }
+    </style>
 </head>
 <body>
+    <!-- Loading overlay -->
+    <div id="loadingOverlay" class="loading-overlay">
+        <div class="zen-loader">
+            <div class="zen-loader-square">
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-face"></div>
+                <div class="zen-loader-inner"></div>
+            </div>
+        </div>
+    </div>
+
     <div class="titlebar">
         <div class="titlebar-left">
             <div class="window-controls">
@@ -20,7 +189,7 @@
             <div class="project-name">Project Name</div>
         </div>
     </div>
-    <div class="main-layout">
+    <div class="main-layout loading">
         <div id="sidebar" class="sidebar">
             <div class="sidebar-placeholder" data-z-rosetta="editor.explorer">File Explorer goes here</div>
         </div>
@@ -49,13 +218,31 @@
             <button class="file-tree-toggle">
                 <img src="assets/file_tree.svg" alt="Toggle File Tree">
             </button>
+            <div class="status-indicators has-no-issues">
+                <div class="checkmark-indicator">
+                    <svg width="18" height="18" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
+                        <path d="M5.5 10.5L2.5 7.5L3.5 6.5L5.5 8.5L10.5 3.5L11.5 4.5L5.5 10.5Z" fill="#000"/>
+                    </svg>
+                </div>
+                <div class="DUO-indicators">
+                    <span class="error-icon">
+                        <svg class="x-icon" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
+                            <path d="M11.375 3.71875L10.2812 2.625L7 5.90625L3.71875 2.625L2.625 3.71875L5.90625 7L2.625 10.2812L3.71875 11.375L7 8.09375L10.2812 11.375L11.375 10.2812L8.09375 7L11.375 3.71875Z" fill="#e53e3e"/>
+                        </svg>
+                    </span>
+                    <span class="error-count">0</span>
+                    <span class="warning-icon">
+                        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
+                            <path d="M7 2C6.44772 2 6 2.44772 6 3V8C6 8.55228 6.44772 9 7 9C7.55228 9 8 8.55228 8 8V3C8 2.44772 7.55228 2 7 2ZM7 10C6.44772 10 6 10.4477 6 11C6 11.5523 6.44772 12 7 12C7.55228 12 8 11.5523 8 11C8 10.4477 7.55228 10 7 10Z" fill="#dd6b20"/>
+                        </svg>
+                    </span>
+                    <span class="warning-count">0</span>
+                </div>
+            </div>
         </div>
         <div class="downbar-right">
             <div class="cursor-position">
-                <span class="cursor-ln">1</span>
-
-                <span class="cursor-separator">:</span>
-                <span class="cursor-col">1</span>
+                <span class="cursor-ln cursor-pos">1,1</span>
             </div>
         </div>
     </div>
diff --git a/src/main.js b/src/main.js
index 1bc037f..a6e0581 100644
--- a/src/main.js
+++ b/src/main.js
@@ -119,7 +119,7 @@ function generateAboutJson() {
                   process.platform === 'linux' ? getLinuxDistro() : 
                   'Unknown',
         architecture: process.arch,
-        contributors: ["Z Team"],
+        contributors: ["Zen Team"],
         repository: "https://github.com/z-editor/z",
         license: "MIT"
     };
@@ -283,11 +283,11 @@ ipcMain.handle('git-clone', async (event, { url, directory }) => {
 
         return new Promise((resolve, reject) => {
             const targetDir = directory || path.basename(url, '.git');
-            const fullPath = path.join(app.getPath('documents'), 'Z-Projects', targetDir);
+            const fullPath = path.join(app.getPath('documents'), 'Zen-Projects', targetDir);
             console.log('Target directory:', fullPath);
 
             // Create projects directory if it doesn't exist
-            const projectsDir = path.join(app.getPath('documents'), 'Z-Projects');
+            const projectsDir = path.join(app.getPath('documents'), 'Zen-Projects');
             if (!fs.existsSync(projectsDir)) {
                 console.log('Creating projects directory:', projectsDir);
                 fs.mkdirSync(projectsDir, { recursive: true });
diff --git a/src/monaco-init.js b/src/monaco-init.js
index 6ba7e36..f6f03ea 100644
--- a/src/monaco-init.js
+++ b/src/monaco-init.js
@@ -346,7 +346,7 @@ function initMonaco() {
                 fontSize: 14,
                 fontFamily: "'Zed Mono', Consolas, 'Courier New', monospace",
                 minimap: {
-                    enabled: true,
+                    enabled: false,
                     maxColumn: 100, // Ограничиваем для производительности
                     renderCharacters: false // Отключаем рендер символов для повышения производительности
                 },
@@ -2023,11 +2023,11 @@ function updateFileContent(filePath, content, forceFocus = false) {
  */
 function setupCursorPositionTracking() {
     // Находим элементы для отображения позиции курсора
-    const cursorColElement = document.querySelector('.cursor-col');
+
     const cursorLnElement = document.querySelector('.cursor-ln');
     
-    if (!cursorColElement || !cursorLnElement) {
-        console.error('Cursor position elements not found');
+    if (!cursorLnElement) {
+        console.error('Cursor position not found');
         return;
     }
     
@@ -2046,8 +2046,8 @@ function setupCursorPositionTracking() {
      * @param {number} lineNumber - Номер строки (начиная с 1)
      */
     function updateCursorPosition(column, lineNumber) {
-        cursorLnElement.textContent = lineNumber;
-        cursorColElement.textContent = column;
+        cursorLnElement.textContent = `${lineNumber},${column}`;
+
     }
 }
 
diff --git a/src/renderer.js b/src/renderer.js
index 17b5e71..99b348a 100644
--- a/src/renderer.js
+++ b/src/renderer.js
@@ -9,6 +9,14 @@ document.addEventListener('DOMContentLoaded', () => {
         };
     }
 
+    // Create a namespace for error handling features
+    if (!window.errorHandler) {
+        window.errorHandler = {
+            detailTabs: new Map(), // Store references to error/warning detail tabs
+            originalFiles: new Map() // Map error tabs to their original files
+        };
+    }
+
     // Window control buttons
     const closeButton = document.querySelector('.control.close');
     const minimizeButton = document.querySelector('.control.minimize');
@@ -25,6 +33,12 @@ document.addEventListener('DOMContentLoaded', () => {
     
     // Editor State
     let monacoInitialized = false;
+    let fileTreeInitialized = false;
+    
+    // Global variables to track errors and warnings
+    let errorCount = 0;
+    let warningCount = 0;
+    let statusMessage = '';
     
     // Initialize tabs
     initializeTabEvents();
@@ -32,6 +46,9 @@ document.addEventListener('DOMContentLoaded', () => {
     // Initialize Monaco editor
     initializeMonaco();
     
+    // Setup error details click handlers
+    setupErrorDetailsOnClick();
+    
     // Window control button event listeners
     closeButton.addEventListener('click', () => {
         windowControls.close();
@@ -67,7 +84,7 @@ document.addEventListener('DOMContentLoaded', () => {
         initializeFileTree(projectPath);
         
         // Update window title
-        document.title = `${projectName || 'Untitled Project'} - Z`;
+        document.title = `${projectName || 'Untitled Project'} - Zen`;
         
         // Initialize tabs after project is loaded
         initializeTabEvents();
@@ -115,6 +132,38 @@ document.addEventListener('DOMContentLoaded', () => {
         resizer.classList.remove('resizing');
     });
 
+    // Function to hide loading overlay and show content
+    function hideLoadingOverlay() {
+        // Make sure both Monaco editor and file tree are initialized
+        if (!monacoInitialized || !fileTreeInitialized) {
+            return;
+        }
+        
+        // Hide the loading overlay immediately when content is ready
+        actuallyHideLoadingOverlay();
+    }
+    
+    // Function that actually hides the loading overlay
+    function actuallyHideLoadingOverlay() {
+        const loadingOverlay = document.getElementById('loadingOverlay');
+        const mainLayout = document.querySelector('.main-layout');
+        
+        if (loadingOverlay && mainLayout) {
+            // Hide overlay with animation
+            loadingOverlay.classList.add('hidden');
+            
+            // Show main content
+            mainLayout.classList.remove('loading');
+            
+            // Remove overlay after animation completes
+            setTimeout(() => {
+                loadingOverlay.remove();
+            }, 300);
+            
+            console.log('Loading completed, interface is now visible');
+        }
+    }
+
     // Initialize file tree
     async function initializeFileTree(projectPath) {
         const sidebar = document.getElementById('sidebar');
@@ -150,10 +199,18 @@ document.addEventListener('DOMContentLoaded', () => {
                     toggleFolder(rootFolderId, result.fileTree.path);
                 }
             }
+
+            // Mark file tree as initialized and try to hide loading overlay
+            fileTreeInitialized = true;
+            hideLoadingOverlay();
             
         } catch (error) {
             console.error('Error initializing file tree:', error);
-            sidebar.innerHTML = `<div class="sidebar-error">Error loading files: ${error.message}</div>`;
+            sidebar.innerHTML = `<div class="file-tree-error">Error loading file tree: ${error.message}</div>`;
+            
+            // Even if there's an error, mark as initialized so we can hide loading overlay
+            fileTreeInitialized = true;
+            hideLoadingOverlay();
         }
     }
     
@@ -575,9 +632,24 @@ document.addEventListener('DOMContentLoaded', () => {
             return;
         }
         
+        // Remember the previous tab to handle cases where we're coming from error details
+        const previousTabPath = activeTab ? activeTab.path : null;
+        const wasVirtualTab = activeTab && activeTab.id !== undefined;
+        const previousTabId = wasVirtualTab ? activeTab.id : null;
+        
+        // Store the error counts before switching
+        const prevErrors = errorCount;
+        const prevWarnings = warningCount;
+        
         // Deactivate current active tab
         if (activeTab) {
-            const currentTab = document.querySelector(`.tab[data-path="${activeTab.path}"]`);
+            // First try to find a regular tab
+            let currentTab = document.querySelector(`.tab[data-path="${activeTab.path}"]`);
+            // If not found, try to find a virtual tab
+            if (!currentTab && activeTab.id) {
+                currentTab = document.querySelector(`.tab[data-virtual-id="${activeTab.id}"]`);
+            }
+            
             if (currentTab) {
                 currentTab.classList.remove('active');
             }
@@ -615,6 +687,64 @@ document.addEventListener('DOMContentLoaded', () => {
             
             // Load file content
             loadFileContent(filePath);
+            
+            // Always ensure errors are refreshed when switching tabs
+            const refreshErrorIndicators = () => {
+                // Force validation to update error counts
+                validateCurrentModel();
+                
+                // If we have Monaco initialized, recheck for markers
+                if (window.monacoEditor && window.monacoEditor.monaco && window.monacoEditor.instance) {
+                    const model = window.monacoEditor.instance.getModel();
+                    if (model) {
+                        const markers = window.monacoEditor.monaco.editor.getModelMarkers({ resource: model.uri });
+                        
+                        // Count errors and warnings
+                        let errCount = 0;
+                        let warnCount = 0;
+                        
+                        markers.forEach(marker => {
+                            if (marker.severity === window.monacoEditor.monaco.MarkerSeverity.Error) {
+                                errCount++;
+                            } else if (marker.severity === window.monacoEditor.monaco.MarkerSeverity.Warning) {
+                                warnCount++;
+                            }
+                        });
+                        
+                        // Update UI with error counts
+                        updateErrorsAndWarnings(errCount, warnCount);
+                    }
+                }
+            };
+            
+            // Run the error refresh checks at staggered intervals to catch any race conditions
+            setTimeout(refreshErrorIndicators, 100);
+            setTimeout(refreshErrorIndicators, 300);
+            setTimeout(refreshErrorIndicators, 500);
+            
+            // Handle switching from error details tab (existing code)
+            if (wasVirtualTab && window.errorHandler.detailTabs.has(previousTabId)) {
+                // We're coming from an error details tab, force refresh the error indicators
+                const forceRefreshErrors = () => {
+                    // Force validation
+                    validateCurrentModel();
+                    
+                    // If the indicators still show no errors but we know there were errors before,
+                    // manually update them
+                    if (prevErrors > 0 || prevWarnings > 0) {
+                        setTimeout(() => {
+                            if (errorCount === 0 && warningCount === 0) {
+                                updateErrorsAndWarnings(prevErrors, prevWarnings);
+                            }
+                        }, 50);
+                    }
+                };
+                
+                // Force multiple checks to catch race conditions
+                setTimeout(forceRefreshErrors, 50);
+                setTimeout(forceRefreshErrors, 200);
+                setTimeout(forceRefreshErrors, 500);
+            }
         }
     }
     
@@ -729,10 +859,19 @@ document.addEventListener('DOMContentLoaded', () => {
             monacoInitialized = true;
             console.log('Monaco editor initialized');
             
+            // Configure Monaco editor for error detection
+            setupErrorDetection();
+            
+            // Setup click handler for errors in the editor
+            setupEditorErrorClickHandler();
+            
             // If there's an active file, open it
             if (activeFile) {
                 loadFileContent(activeFile);
             }
+            
+            // Try to hide loading overlay
+            hideLoadingOverlay();
         } catch (error) {
             console.error('Failed to initialize Monaco editor:', error);
             
@@ -746,6 +885,10 @@ document.addEventListener('DOMContentLoaded', () => {
                     </div>
                 `;
             }
+            
+            // Even if there's an error, mark as initialized
+            monacoInitialized = true;
+            hideLoadingOverlay();
         }
     }
     
@@ -766,6 +909,9 @@ document.addEventListener('DOMContentLoaded', () => {
                     window.monacoEditor.instance.setModel(existingModel);
                     // Focus the editor after switching tabs
                     setTimeout(() => window.monacoEditor.instance.focus(), 50);
+                    
+                    // Validate the model to update error indicators
+                    setTimeout(() => validateCurrentModel(), 100);
                     return;
                 }
             }
@@ -798,6 +944,9 @@ document.addEventListener('DOMContentLoaded', () => {
                 
                 // Начинаем отслеживать изменения файла извне
                 startWatchingExternalChanges();
+                
+                // Validate the model to update error indicators
+                setTimeout(() => validateCurrentModel(), 200);
             } else {
                 console.log('Monaco not ready, will open file when initialized');
             }
@@ -831,6 +980,586 @@ document.addEventListener('DOMContentLoaded', () => {
             }
         });
     }
+
+    // Setup error detection for Monaco editor
+    function setupErrorDetection() {
+        if (!window.monacoEditor || !window.monacoEditor.monaco) {
+            console.error('Monaco editor not available for error detection setup');
+            return;
+        }
+        
+        const monaco = window.monacoEditor.monaco;
+        
+        // Update status message to "Checking..." during validation
+        updateStatusMessage('Checking...');
+        
+        // Create a timeout to avoid too frequent updates
+        let checkTimeout = null;
+        
+        // Listen for model content changes
+        window.monacoEditor.instance.onDidChangeModelContent(() => {
+            // Clear any previous timeout
+            if (checkTimeout) {
+                clearTimeout(checkTimeout);
+            }
+            
+            // Set status to checking
+            updateStatusMessage('Checking...');
+            
+            // Setup timeout to check for errors after typing stops
+            checkTimeout = setTimeout(() => {
+                validateCurrentModel();
+            }, 300); // 300ms delay before checking
+        });
+        
+        // Listen for marker changes (Monaco's internal representation of errors/warnings)
+        monaco.editor.onDidChangeMarkers(([uri]) => {
+            if (!uri) return;
+            
+            const currentModel = window.monacoEditor.instance.getModel();
+            if (!currentModel) return;
+            
+            // Only process markers for the current model
+            if (currentModel.uri.toString() === uri.toString()) {
+                processMarkers(uri);
+            }
+        });
+        
+        // Listen for model changes (when switching between files/tabs)
+        window.monacoEditor.instance.onDidChangeModel(() => {
+            // Ensure we validate the new model for errors
+            validateCurrentModel();
+        });
+        
+        // Initial validation of the current model
+        validateCurrentModel();
+    }
+
+    // Validate the current model for errors/warnings
+    function validateCurrentModel() {
+        if (!window.monacoEditor || !window.monacoEditor.instance) return;
+        
+        const model = window.monacoEditor.instance.getModel();
+        if (!model) {
+            // No model, so no errors
+            resetErrorsAndWarnings();
+            return;
+        }
+        
+        processMarkers(model.uri);
+    }
+
+    // Process markers (errors/warnings) for a given model URI
+    function processMarkers(uri) {
+        if (!window.monacoEditor || !window.monacoEditor.monaco) return;
+        
+        const monaco = window.monacoEditor.monaco;
+        const markers = monaco.editor.getModelMarkers({ resource: uri });
+        
+        // Count errors and warnings
+        let errors = 0;
+        let warnings = 0;
+        
+        markers.forEach(marker => {
+            if (marker.severity === monaco.MarkerSeverity.Error) {
+                errors++;
+            } else if (marker.severity === monaco.MarkerSeverity.Warning) {
+                warnings++;
+            }
+        });
+        
+        // Update UI with new counts
+        updateErrorsAndWarnings(errors, warnings);
+        
+        // Clear "Checking..." message if present
+        if (statusMessage === 'Checking...') {
+            updateStatusMessage('');
+        }
+    }
+
+    // Update the error and warning counts in the UI
+    function updateErrorsAndWarnings(errors, warnings) {
+        errorCount = errors;
+        warningCount = warnings;
+        
+        // Update the DOM elements
+        const errorCountElement = document.querySelector('.error-count');
+        const warningCountElement = document.querySelector('.warning-count');
+        
+        if (errorCountElement) {
+            errorCountElement.textContent = errorCount;
+        }
+        
+        if (warningCountElement) {
+            warningCountElement.textContent = warningCount;
+        }
+        
+        // Update the status indicator class
+        const statusIndicator = document.querySelector('.status-indicators');
+        if (statusIndicator) {
+            if (errorCount === 0 && warningCount === 0) {
+                statusIndicator.classList.add('has-no-issues');
+            } else {
+                statusIndicator.classList.remove('has-no-issues');
+            }
+        }
+    }
+
+    // Reset errors and warnings to zero
+    function resetErrorsAndWarnings() {
+        updateErrorsAndWarnings(0, 0);
+    }
+
+    // Update the status message
+    function updateStatusMessage(message) {
+        statusMessage = message;
+        
+        // Check if status message element exists, if not create it
+        let statusMessageElement = document.querySelector('.status-message');
+        
+        if (!statusMessageElement) {
+            // Create the status message element if it doesn't exist
+            const downbarRight = document.querySelector('.downbar-left');
+            
+            if (downbarRight) {
+                statusMessageElement = document.createElement('div');
+                statusMessageElement.className = 'status-message';
+                
+                // Insert before the cursor position element
+                const cursorPosition = downbarRight.querySelector('.cursor-position');
+                if (cursorPosition) {
+                    downbarRight.insertBefore(statusMessageElement, cursorPosition);
+                } else {
+                    downbarRight.appendChild(statusMessageElement);
+                }
+            }
+        }
+        
+        // Update the message text
+        if (statusMessageElement) {
+            statusMessageElement.textContent = message;
+        }
+    }
+
+    // Set up event listener to show error details when clicking on error indicators
+    function setupErrorDetailsOnClick() {
+        // Get the error and warning indicators
+        const errorIndicator = document.querySelector('.error-icon');
+        const warningIndicator = document.querySelector('.warning-icon');
+        
+        if (errorIndicator) {
+            // Add tooltip
+            errorIndicator.setAttribute('title', 'Click to see error details in a new tab');
+            
+            errorIndicator.addEventListener('click', () => {
+                if (errorCount > 0) {
+                    showErrorDetailsInNewTab(true);
+                }
+            });
+        }
+        
+        if (warningIndicator) {
+            // Add tooltip
+            warningIndicator.setAttribute('title', 'Click to see warning details in a new tab');
+            
+            warningIndicator.addEventListener('click', () => {
+                if (warningCount > 0) {
+                    showErrorDetailsInNewTab(false);
+                }
+            });
+        }
+    }
+
+    // Show error details in a new tab
+    function showErrorDetailsInNewTab(showError = true) {
+        if (!window.monacoEditor || !window.monacoEditor.monaco) return;
+        
+        const monaco = window.monacoEditor.monaco;
+        const model = window.monacoEditor.instance.getModel();
+        
+        if (!model) return;
+        
+        const markers = monaco.editor.getModelMarkers({ resource: model.uri });
+        
+        // Filter markers based on whether we want errors or warnings
+        const filteredMarkers = markers.filter(marker => {
+            if (showError) {
+                return marker.severity === monaco.MarkerSeverity.Error;
+            } else {
+                return marker.severity === monaco.MarkerSeverity.Warning;
+            }
+        });
+        
+        if (filteredMarkers.length === 0) return;
+        
+        // Get info about the current file
+        const activeModel = window.monacoEditor.instance.getModel();
+        if (!activeModel) return;
+        
+        const originalUri = activeModel.uri;
+        const originalFilePath = activeModel.uri.path;
+        const fileExtension = originalFilePath.split('.').pop();
+        const fileName = originalFilePath.split('/').pop();
+        
+        // Create a unique virtual tab ID (not a file path)
+        const type = showError ? 'Error' : 'Warning';
+        const tempFileName = `${type} Details - ${fileName}`;
+        const virtualTabId = `virtual:${type.toLowerCase()}-details-${Date.now()}`;
+        
+        // Save original file's data for reference
+        window.errorHandler.originalFiles.set(virtualTabId, {
+            uri: originalUri,
+            path: originalFilePath,
+            fileName: fileName,
+            markers: filteredMarkers
+        });
+        
+        // Generate content for the error details tab
+        let content = `// ${type}s in ${fileName}\n// Total: ${filteredMarkers.length}\n\n`;
+        
+        filteredMarkers.forEach((marker, index) => {
+            const lineStart = marker.startLineNumber;
+            const colStart = marker.startColumn;
+            const lineEnd = marker.endLineNumber;
+            const colEnd = marker.endColumn;
+            
+            // Get the code snippet where the error/warning occurred
+            const lines = activeModel.getLinesContent();
+            
+            // Get a few lines before and after for context (if available)
+            const contextBefore = 2;
+            const contextAfter = 2;
+            const startLine = Math.max(0, lineStart - 1 - contextBefore);
+            const endLine = Math.min(lines.length - 1, lineEnd - 1 + contextAfter);
+            
+            const affectedLines = lines.slice(startLine, endLine + 1);
+            
+            content += `//=======================================================\n`;
+            content += `// ${type} ${index + 1}: Line ${lineStart}, Column ${colStart}\n`;
+            content += `// Message: ${marker.message}\n\n`;
+            
+            // Add line numbers to code snippet with clearer formatting
+            const snippetWithLineNumbers = affectedLines.map((line, i) => {
+                const lineNumber = startLine + i + 1;
+                const isErrorLine = lineNumber >= lineStart && lineNumber <= lineEnd;
+                // Highlight the error lines
+                const prefix = isErrorLine ? '▶ ' : '  ';
+                return `${prefix}${lineNumber.toString().padStart(4, ' ')} | ${line}`;
+            }).join('\n');
+            
+            content += snippetWithLineNumbers + '\n\n';
+            
+            // Add a marker showing exactly where in the line the error is
+            if (lineStart === lineEnd) {
+                const targetLine = lineStart - startLine - 1;
+                if (targetLine >= 0 && targetLine < affectedLines.length) {
+                    // Add an arrow pointing to the exact error position
+                    const pointerLine = '       ' + ' '.repeat(colStart) + 
+                                       '^'.repeat(Math.max(1, colEnd - colStart));
+                    content += pointerLine + '\n\n';
+                }
+            }
+            
+            content += `// Location: ${fileName}:${lineStart}:${colStart}\n`;
+            content += `//=======================================================\n\n`;
+        });
+        
+        // Create a virtual model for this content
+        const virtualUri = monaco.Uri.parse(virtualTabId);
+        let errorModel = monaco.editor.getModel(virtualUri);
+        
+        if (!errorModel) {
+            errorModel = monaco.editor.createModel(
+                content,
+                getLanguageForExtension(fileExtension),
+                virtualUri
+            );
+        } else {
+            // Update existing model
+            errorModel.setValue(content);
+        }
+        
+        // Create a tab
+        createVirtualTab(tempFileName, virtualTabId, showError ? 'error' : 'warning');
+        
+        // Store this tab in our error handler
+        window.errorHandler.detailTabs.set(virtualTabId, {
+            type: showError ? 'error' : 'warning',
+            originalUri: originalUri,
+            originalFile: originalFilePath
+        });
+        
+        // Set the model for the editor
+        window.monacoEditor.instance.setModel(errorModel);
+        
+        // Make it editable instead of read-only
+        window.monacoEditor.instance.updateOptions({ readOnly: false });
+    }
+    
+    // Create a virtual tab that's not tied to a real file
+    function createVirtualTab(tabName, tabId, tabType) {
+        const tabsContainer = document.querySelector('.tabs-container');
+        
+        // Create tab element
+        const tab = document.createElement('div');
+        tab.className = 'tab virtual-tab';
+        if (tabType) {
+            tab.classList.add(`virtual-${tabType}-tab`);
+        }
+        tab.setAttribute('data-virtual-id', tabId);
+        
+        tab.innerHTML = `
+            <span class="tab-name">${tabName}</span>
+            <button class="tab-close">
+                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
+                    <line x1="18" y1="6" x2="6" y2="18"></line>
+                    <line x1="6" y1="6" x2="18" y2="18"></line>
+                </svg>
+            </button>
+        `;
+        
+        // Add to tabs container
+        tabsContainer.appendChild(tab);
+        
+        // Add to virtual tabs tracking - format similar to openTabs
+        if (!window.virtualTabs) {
+            window.virtualTabs = [];
+        }
+        window.virtualTabs.push({ name: tabName, id: tabId, type: tabType });
+        
+        // Add click event to tab
+        tab.addEventListener('click', () => {
+            activateVirtualTab(tabName, tabId);
+        });
+        
+        // Add click event to close button
+        const closeButton = tab.querySelector('.tab-close');
+        closeButton.addEventListener('click', (e) => {
+            e.stopPropagation();
+            closeVirtualTab(tabName, tabId);
+        });
+        
+        // Activate the new tab
+        activateVirtualTab(tabName, tabId);
+        
+        // Scroll to the new tab
+        tab.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
+    }
+    
+    // Activate a virtual tab
+    function activateVirtualTab(tabName, tabId) {
+        // Deactivate current active tab (regular or virtual)
+        if (activeTab) {
+            // First try to find a regular tab
+            let currentTab = document.querySelector(`.tab[data-path="${activeTab.path}"]`);
+            // If not found, try to find a virtual tab
+            if (!currentTab) {
+                currentTab = document.querySelector(`.tab[data-virtual-id="${activeTab.id}"]`);
+            }
+            
+            if (currentTab) {
+                currentTab.classList.remove('active');
+            }
+        }
+        
+        // Activate new virtual tab
+        const newTab = document.querySelector(`.tab[data-virtual-id="${tabId}"]`);
+        if (newTab) {
+            newTab.classList.add('active');
+            // Use id field to distinguish virtual tabs from real files
+            activeTab = { name: tabName, id: tabId };
+            
+            // Update breadcrumb to show it's a virtual tab
+            updateVirtualTabBreadcrumb(tabName, tabId);
+            
+            // Apply the correct model to editor
+            if (tabId.startsWith('virtual:')) {
+                const monaco = window.monacoEditor.monaco;
+                const model = monaco.editor.getModel(monaco.Uri.parse(tabId));
+                if (model) {
+                    window.monacoEditor.instance.setModel(model);
+                    
+                    // Force validation to update error counts
+                    setTimeout(() => validateCurrentModel(), 100);
+                }
+            }
+        }
+    }
+    
+    // Close a virtual tab
+    function closeVirtualTab(tabName, tabId) {
+        // Remove from virtual tabs array
+        if (window.virtualTabs) {
+            const tabIndex = window.virtualTabs.findIndex(tab => tab.id === tabId);
+            if (tabIndex !== -1) {
+                window.virtualTabs.splice(tabIndex, 1);
+            }
+        }
+        
+        // Remove from DOM
+        const tab = document.querySelector(`.tab[data-virtual-id="${tabId}"]`);
+        if (tab) {
+            tab.remove();
+        }
+        
+        // If it's an error/warning details tab, clean up
+        if (window.errorHandler.detailTabs.has(tabId)) {
+            // Get original file info
+            const tabInfo = window.errorHandler.detailTabs.get(tabId);
+            
+            // Delete this tab info
+            window.errorHandler.detailTabs.delete(tabId);
+            window.errorHandler.originalFiles.delete(tabId);
+            
+            // Delete the model
+            const monaco = window.monacoEditor.monaco;
+            const model = monaco.editor.getModel(monaco.Uri.parse(tabId));
+            if (model) {
+                model.dispose();
+            }
+        }
+        
+        // If the closed tab was the active one, activate another tab
+        if (activeTab && activeTab.id === tabId) {
+            // Try to find next tab to activate
+            if (window.virtualTabs && window.virtualTabs.length > 0) {
+                const virtualTab = window.virtualTabs[window.virtualTabs.length - 1];
+                activateVirtualTab(virtualTab.name, virtualTab.id);
+            } else if (openTabs.length > 0) {
+                const realTab = openTabs[openTabs.length - 1];
+                activateTab(realTab.name, realTab.path);
+            } else {
+                // No tabs left
+                activeTab = null;
+                updateFileBreadcrumb(null);
+            }
+        }
+    }
+    
+    // Update breadcrumb for virtual tabs
+    function updateVirtualTabBreadcrumb(tabName, tabId) {
+        const breadcrumbFilePathElement = document.querySelector('.file-path');
+        const breadcrumbContextElement = document.querySelector('.context-info');
+        
+        if (breadcrumbFilePathElement && breadcrumbContextElement) {
+            breadcrumbFilePathElement.textContent = tabName;
+            
+            // For error/warning tabs, show additional context
+            if (window.errorHandler.detailTabs.has(tabId)) {
+                const tabInfo = window.errorHandler.detailTabs.get(tabId);
+                breadcrumbContextElement.textContent = tabInfo.type === 'error' ? 'Error Report' : 'Warning Report';
+            } else {
+                breadcrumbContextElement.textContent = 'Virtual Document';
+            }
+            
+            // Store tab ID as data attribute
+            breadcrumbFilePathElement.setAttribute('data-virtual-id', tabId);
+        }
+    }
+
+    // Helper function to get language ID from file extension
+    function getLanguageForExtension(extension) {
+        const extensionMap = {
+            'js': 'javascript',
+            'ts': 'typescript',
+            'html': 'html',
+            'css': 'css',
+            'json': 'json',
+            'md': 'markdown',
+            'py': 'python',
+            'rb': 'ruby',
+            'rs': 'rust',
+            'go': 'go',
+            'java': 'java',
+            'c': 'c',
+            'cpp': 'cpp',
+            'cs': 'csharp'
+        };
+        
+        return extensionMap[extension] || 'plaintext';
+    }
+    
+    // Show the first error or warning and update status message
+    function showFirstErrorOrWarning(showError = true) {
+        if (!window.monacoEditor || !window.monacoEditor.monaco) return;
+        
+        const monaco = window.monacoEditor.monaco;
+        const model = window.monacoEditor.instance.getModel();
+        
+        if (!model) return;
+        
+        const markers = monaco.editor.getModelMarkers({ resource: model.uri });
+        
+        // Filter markers based on whether we want errors or warnings
+        const filteredMarkers = markers.filter(marker => {
+            if (showError) {
+                return marker.severity === monaco.MarkerSeverity.Error;
+            } else {
+                return marker.severity === monaco.MarkerSeverity.Warning;
+            }
+        });
+        
+        if (filteredMarkers.length === 0) return;
+        
+        // Get the first error/warning
+        const firstMarker = filteredMarkers[0];
+        
+        // Jump to the position of the error/warning
+        window.monacoEditor.instance.revealPositionInCenter({
+            lineNumber: firstMarker.startLineNumber,
+            column: firstMarker.startColumn
+        });
+        
+        // Set the cursor at the position
+        window.monacoEditor.instance.setPosition({
+            lineNumber: firstMarker.startLineNumber,
+            column: firstMarker.startColumn
+        });
+        
+        // Focus the editor
+        window.monacoEditor.instance.focus();
+        
+        // Update status message with error details
+        const type = showError ? 'Error' : 'Warning';
+        updateStatusMessage(`${type}: ${firstMarker.message}`);
+    }
+
+    // Setup click handler for errors in the editor
+    function setupEditorErrorClickHandler() {
+        if (!window.monacoEditor || !window.monacoEditor.instance) return;
+        
+        const editor = window.monacoEditor.instance;
+        const monaco = window.monacoEditor.monaco;
+        
+        // Listen for mouse clicks in the editor
+        editor.onMouseDown((e) => {
+            // Get the position where the user clicked
+            const position = e.target.position;
+            if (!position) return;
+            
+            // Get all markers at the current position
+            const model = editor.getModel();
+            if (!model) return;
+            
+            const markers = monaco.editor.getModelMarkers({ resource: model.uri });
+            const markersAtPosition = markers.filter(marker => {
+                return position.lineNumber >= marker.startLineNumber &&
+                       position.lineNumber <= marker.endLineNumber &&
+                       position.column >= marker.startColumn &&
+                       position.column <= marker.endColumn;
+            });
+            
+            // If there are markers at this position, show error details
+            if (markersAtPosition.length > 0) {
+                const marker = markersAtPosition[0];
+                const isError = marker.severity === monaco.MarkerSeverity.Error;
+                
+                // Show status message with error details
+                const type = isError ? 'Error' : 'Warning';
+                updateStatusMessage(`${type}: ${marker.message}`);
+            }
+        });
+    }
 }); 
 
 
diff --git a/src/styles.css b/src/styles.css
index 558cd77..e76be48 100644
--- a/src/styles.css
+++ b/src/styles.css
@@ -619,8 +619,8 @@ body {
     display: flex;
     align-items: center;
     font-family: 'Zed Mono', monospace;
-    font-size: 12px;
-    color: #64748B;
+    font-size: 14px;
+    color: #000000b5;
     user-select: none;
 }
 
@@ -629,6 +629,133 @@ body {
 }
 
 .cursor-separator {
+    color: #000000;
+}
 
-    color: #94A3B8;
+.status-indicators {
+    display: flex;
+    margin-left: 12px;
+    align-items: center;
+    font-size: 14px;
+    ;
+}
+
+.checkmark-indicator {
+    display: none;
+    background-color: rgb(0 0 0 / 0%);
+
+}
+
+.checkmark-indicator:hover {
+    background-color: rgb(0 0 0 / 0%);
+}
+
+.DUO-indicators {
+    display: none;
+    align-items: center;
+    background-color: rgb(255 0 0 / 10%);
+    padding: 0px 3px;
+    border: 1px solid #ff000024;
+    border-radius: 4px;
+}
+
+.DUO-indicators:hover {
+    background-color: rgb(255 0 0 / 18%);
+}
+
+/* When there are no issues, show checkmark and hide indicators */
+.status-indicators.has-no-issues .checkmark-indicator {
+    display: flex;
+}
+
+.status-indicators.has-no-issues .DUO-indicators {
+    display: none;
+}
+
+/* When there are issues, hide checkmark and show indicators */
+.status-indicators:not(.has-no-issues) .checkmark-indicator {
+    display: none;
+}
+
+.status-indicators:not(.has-no-issues) .DUO-indicators {
+    display: flex;
+}
+
+.error-icon, .warning-icon {
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    width: 14px;
+    height: 14px;
+    margin-right: 2px;
+}
+
+.error-count {
+    font-family: 'Zed Mono', monospace;
+    color: #1e1e1e;
+    margin-right: 2px;
+}
+
+.warning-count {
+    font-family: 'Zed Mono', monospace;
+    color: #1e1e1e;
+}
+
+.status-message {
+    font-family: 'Zed Mono', monospace;
+    font-size: 14px;
+    color: #1e1e1e;
+    margin-left: 12px;
+    white-space: nowrap;
+    overflow: hidden;
+    text-overflow: ellipsis;
+    max-width: 300px;
+}
+
+/* Error details tab styles */
+.tab[data-path$="-error-details"] .tab-name,
+.tab[data-path$="-warning-details"] .tab-name,
+.virtual-tab.virtual-error-tab .tab-name {
+    color: var(--error-text-color, #e53e3e);
+    font-weight: bold;
+}
+
+.tab[data-path$="-warning-details"] .tab-name,
+.virtual-tab.virtual-warning-tab .tab-name {
+    color: var(--warning-text-color, #dd6b20);
+}
+
+/* Virtual tab styles */
+.virtual-tab {
+    position: relative;
+}
+
+.virtual-tab::before {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: 0;
+    right: 0;
+    height: 2px;
+    background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.1), transparent);
+}
+
+.virtual-tab.virtual-error-tab::before {
+    background: linear-gradient(to right, transparent, rgba(229, 62, 62, 0.5), transparent);
+}
+
+.virtual-tab.virtual-warning-tab::before {
+    background: linear-gradient(to right, transparent, rgba(221, 107, 32, 0.5), transparent);
+}
+
+.virtual-tab.active::before {
+    background: linear-gradient(to right, transparent, rgba(0, 136, 204, 0.5), transparent);
+}
+
+.virtual-tab.virtual-error-tab.active::before {
+    background: linear-gradient(to right, transparent, rgba(229, 62, 62, 0.7), transparent);
+}
+
+.virtual-tab.virtual-warning-tab.active::before {
+    background: linear-gradient(to right, transparent, rgba(221, 107, 32, 0.7), transparent);
 } 
\ No newline at end of file
diff --git a/src/translations/ar.json b/src/translations/ar.json
index 36a80d9..a8bdccb 100644
--- a/src/translations/ar.json
+++ b/src/translations/ar.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "مرحبًا بك في Z",
+    "title": "مرحبًا بك في Zen",
     "tagline": "محرر سريع وخفيف من أجلك",
     "getStarted": "البدء",
     "newProject": "مشروع جديد",
     "openProject": "فتح مشروع",
     "cloneRepository": "استنساخ مستودع",
-    "version": "Z",
+    "version": "Zen",
     "loading": "جاري التحميل...",
     "message": "افتح ملفًا أو أنشئ ملفًا جديدًا للبدء",
     "openFile": "فتح ملف",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "التحليلات",
-    "modalTitle": "ساعد في تحسين Z",
-    "modalIntro": "ساعدنا في تحسين Z من خلال مشاركة بيانات الاستخدام المجهولة. يمكنك اختيار المعلومات التي تريد مشاركتها:",
+    "modalTitle": "ساعد في تحسين Zen",
+    "modalIntro": "ساعدنا في تحسين Zen من خلال مشاركة بيانات الاستخدام المجهولة. يمكنك اختيار المعلومات التي تريد مشاركتها:",
     "basicInfo": "بيانات الاستخدام الأساسية",
     "basicDescription": "إصدار التطبيق، معلومات البناء، نظام التشغيل وإحصائيات الاستخدام الأساسية",
     "systemInfo": "معلومات النظام",
@@ -53,7 +53,7 @@
     "save": "حفظ",
     "analyticsDisabled": "تم تعطيل جمع البيانات",
     "onlyBasic": "يتم جمع بيانات الاستخدام الأساسية فقط",
-    "analyticsEnabled": "شكرًا لمساعدتك في تحسين Z!"
+    "analyticsEnabled": "شكرًا لمساعدتك في تحسين Zen!"
   },
   "language": {
     "title": "اللغة",
@@ -79,6 +79,6 @@
     "contributor": "مساهم",
     "communityManager": "مدير المجتمع",
     "close": "إغلاق",
-    "buildMessage": "عمل الأشخاص التاليون بجد على هذا الإصدار من Z:"
+    "buildMessage": "عمل الأشخاص التالية أسماؤهم بجد على هذا الإصدار من Zen:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/de.json b/src/translations/de.json
index 9dca95b..499bdd4 100644
--- a/src/translations/de.json
+++ b/src/translations/de.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Willkommen bei Z",
+    "title": "Willkommen bei Zen",
     "tagline": "Schneller, leichtgewichtiger Editor für Sie",
     "getStarted": "Loslegen",
     "newProject": "Neues Projekt",
     "openProject": "Projekt öffnen",
     "cloneRepository": "Repository klonen",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Lädt...",
     "message": "Öffnen Sie eine Datei oder erstellen Sie eine neue, um zu beginnen",
     "openFile": "Datei öffnen",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Analytik",
-    "modalTitle": "Helfen Sie Z zu verbessern",
-    "modalIntro": "Helfen Sie uns, Z zu verbessern, indem Sie anonyme Nutzungsdaten teilen. Sie können wählen, welche Informationen Sie teilen möchten:",
+    "modalTitle": "Helfen Sie Zen zu verbessern",
+    "modalIntro": "Helfen Sie uns, Zen zu verbessern, indem Sie anonyme Nutzungsdaten teilen. Sie können wählen, welche Informationen Sie teilen möchten:",
     "basicInfo": "Grundlegende Nutzungsdaten",
     "basicDescription": "App-Version, Build-Informationen, Betriebssystem und grundlegende Nutzungsstatistiken",
     "systemInfo": "Systeminformationen",
@@ -53,7 +53,7 @@
     "save": "Speichern",
     "analyticsDisabled": "Datenerfassung deaktiviert",
     "onlyBasic": "Nur grundlegende Nutzungsdaten werden erfasst",
-    "analyticsEnabled": "Danke, dass Sie helfen, Z zu verbessern!"
+    "analyticsEnabled": "Danke, dass Sie helfen, Zen zu verbessern!"
   },
   "language": {
     "title": "Sprache",
@@ -79,6 +79,6 @@
     "contributor": "Mitwirkender",
     "communityManager": "Community Manager",
     "close": "Schließen",
-    "buildMessage": "Die folgenden Personen haben hart an diesem Z-Build gearbeitet:"
+    "buildMessage": "Die folgenden Personen haben hart an diesem Zen-Build gearbeitet:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/en.json b/src/translations/en.json
index 98ee92a..e01a1a7 100644
--- a/src/translations/en.json
+++ b/src/translations/en.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Welcome to Z",
+    "title": "Welcome to Zen",
     "tagline": "Fast, lightweight editor for you",
     "getStarted": "Get Started",
     "newProject": "New Project", 
     "openProject": "Open Project",
     "cloneRepository": "Clone Repository",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Loading...",
     "message": "Open a file or create a new one to get started",
     "openFile": "Open File",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Analytics",
-    "modalTitle": "Help Improve Z",
-    "modalIntro": "Help us make Z better by sharing anonymous usage data. You can choose what information to share:",
+    "modalTitle": "Help Improve Zen",
+    "modalIntro": "Help us make Zen better by sharing anonymous usage data. You can choose what information to share:",
     "basicInfo": "Basic Usage Data",
     "basicDescription": "App version, build info, operating system, and basic usage statistics",
     "systemInfo": "System Information", 
@@ -53,7 +53,7 @@
     "save": "Save",
     "analyticsDisabled": "Analytics collection is disabled",
     "onlyBasic": "Only collecting basic usage data",
-    "analyticsEnabled": "Thank you for helping improve Z!"
+    "analyticsEnabled": "Thank you for helping improve Zen!"
   },
   "language": {
     "title": "Language",
@@ -81,6 +81,6 @@
     "contributor": "Contributor",
     "communityManager": "Community Manager",
     "close": "Close",
-    "buildMessage": "The following people worked hard on this Z build:"
+    "buildMessage": "The following people worked hard on this Zen build:"
   }
 }
\ No newline at end of file
diff --git a/src/translations/es.json b/src/translations/es.json
index a79b1c5..2a9e971 100644
--- a/src/translations/es.json
+++ b/src/translations/es.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Bienvenido a Z",
+    "title": "Bienvenido a Zen",
     "tagline": "Editor rápido y ligero para ti",
     "getStarted": "Comenzar",
     "newProject": "Nuevo Proyecto",
     "openProject": "Abrir Proyecto",
     "cloneRepository": "Clonar Repositorio",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Cargando...",
     "message": "Abre un archivo o crea uno nuevo para comenzar",
     "openFile": "Abrir Archivo",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Análisis",
-    "modalTitle": "Ayuda a Mejorar Z",
-    "modalIntro": "Ayúdanos a mejorar Z compartiendo datos de uso anónimos. Puedes elegir qué información compartir:",
+    "modalTitle": "Ayuda a mejorar Zen",
+    "modalIntro": "Ayúdanos a mejorar Zen compartiendo datos de uso anónimos. Puedes elegir qué información compartir:",
     "basicInfo": "Datos de Uso Básicos",
     "basicDescription": "Versión de la aplicación, información de compilación, sistema operativo y estadísticas básicas de uso",
     "systemInfo": "Información del Sistema",
@@ -53,7 +53,7 @@
     "save": "Guardar",
     "analyticsDisabled": "Recopilación de datos desactivada",
     "onlyBasic": "Solo se recopilan datos de uso básicos",
-    "analyticsEnabled": "¡Gracias por ayudar a mejorar Z!"
+    "analyticsEnabled": "¡Gracias por ayudar a mejorar Zen!"
   },
   "language": {
     "title": "Idioma",
@@ -79,6 +79,6 @@
     "contributor": "Colaborador",
     "communityManager": "Gerente de Comunidad",
     "close": "Cerrar",
-    "buildMessage": "Las siguientes personas trabajaron arduamente en esta versión de Z:"
+    "buildMessage": "Las siguientes personas trabajaron duro en esta versión de Zen:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/fr.json b/src/translations/fr.json
index b45cad3..a663996 100644
--- a/src/translations/fr.json
+++ b/src/translations/fr.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Bienvenue sur Z",
+    "title": "Bienvenue sur Zen",
     "tagline": "Éditeur rapide et léger pour vous",
     "getStarted": "Commencer",
     "newProject": "Nouveau Projet",
     "openProject": "Ouvrir un Projet",
     "cloneRepository": "Cloner un Dépôt",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Chargement...",
     "message": "Ouvrez un fichier ou créez-en un nouveau pour commencer",
     "openFile": "Ouvrir un Fichier",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Analyse",
-    "modalTitle": "Aidez à Améliorer Z",
-    "modalIntro": "Aidez-nous à améliorer Z en partageant des données d'utilisation anonymes. Vous pouvez choisir les informations à partager :",
+    "modalTitle": "Aidez à Améliorer Zen",
+    "modalIntro": "Aidez-nous à améliorer Zen en partageant des données d'utilisation anonymes. Vous pouvez choisir les informations à partager :",
     "basicInfo": "Données d'Utilisation de Base",
     "basicDescription": "Version de l'application, informations de build, système d'exploitation et statistiques d'utilisation de base",
     "systemInfo": "Informations Système",
@@ -53,7 +53,7 @@
     "save": "Enregistrer",
     "analyticsDisabled": "Collecte de données désactivée",
     "onlyBasic": "Collecte uniquement des données d'utilisation de base",
-    "analyticsEnabled": "Merci d'aider à améliorer Z !"
+    "analyticsEnabled": "Merci d'aider à améliorer Zen !"
   },
   "language": {
     "title": "Langue",
@@ -79,6 +79,6 @@
     "contributor": "Contributeur",
     "communityManager": "Gestionnaire de Communauté",
     "close": "Fermer",
-    "buildMessage": "Les personnes suivantes ont travaillé dur sur cette version de Z :"
+    "buildMessage": "Les personnes suivantes ont travaillé dur sur cette version de Zen :"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/it.json b/src/translations/it.json
index ef2349f..f0496e0 100644
--- a/src/translations/it.json
+++ b/src/translations/it.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Benvenuto su Z",
+    "title": "Benvenuto in Zen",
     "tagline": "Editor veloce e leggero per te",
     "getStarted": "Inizia",
     "newProject": "Nuovo Progetto",
     "openProject": "Apri Progetto",
     "cloneRepository": "Clona Repository",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Caricamento...",
     "message": "Apri un file o creane uno nuovo per iniziare",
     "openFile": "Apri File",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Analisi",
-    "modalTitle": "Aiuta a Migliorare Z",
-    "modalIntro": "Aiutaci a migliorare Z condividendo dati anonimi sull'utilizzo. Puoi scegliere quali informazioni condividere:",
+    "modalTitle": "Aiuta a migliorare Zen",
+    "modalIntro": "Aiutaci a migliorare Zen condividendo dati di utilizzo anonimi. Puoi scegliere quali informazioni condividere:",
     "basicInfo": "Dati di Utilizzo Base",
     "basicDescription": "Versione dell'applicazione, informazioni di build, sistema operativo e statistiche di utilizzo base",
     "systemInfo": "Informazioni di Sistema",
@@ -53,7 +53,7 @@
     "save": "Salva",
     "analyticsDisabled": "Raccolta dati disattivata",
     "onlyBasic": "Vengono raccolti solo i dati di utilizzo base",
-    "analyticsEnabled": "Grazie per aiutarci a migliorare Z!"
+    "analyticsEnabled": "Grazie per aver aiutato a migliorare Zen!"
   },
   "language": {
     "title": "Lingua",
@@ -79,6 +79,6 @@
     "contributor": "Collaboratore",
     "communityManager": "Gestore della Comunità",
     "close": "Chiudi",
-    "buildMessage": "Le seguenti persone hanno lavorato duramente su questa versione di Z:"
+    "buildMessage": "Le seguenti persone hanno lavorato duramente su questa versione di Zen:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/ja.json b/src/translations/ja.json
index a9f9d83..9a5c9a6 100644
--- a/src/translations/ja.json
+++ b/src/translations/ja.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Z へようこそ",
+    "title": "Zen へようこそ",
     "tagline": "あなたのための高速で軽量なエディタ",
     "getStarted": "始める",
     "newProject": "新規プロジェクト",
     "openProject": "プロジェクトを開く",
     "cloneRepository": "リポジトリをクローン",
-    "version": "Z",
+    "version": "Zen",
     "loading": "読み込み中...",
     "message": "ファイルを開くか新規作成して始めましょう",
     "openFile": "ファイルを開く",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "分析",
-    "modalTitle": "Zの改善にご協力ください",
-    "modalIntro": "匿名の使用データを共有してZの改善にご協力ください。共有する情報を選択できます：",
+    "modalTitle": "Zenの改善にご協力ください",
+    "modalIntro": "匿名の使用データを共有してZenの改善にご協力ください。共有する情報を選択できます：",
     "basicInfo": "基本的な使用データ",
     "basicDescription": "アプリバージョン、ビルド情報、OS、基本的な使用統計",
     "systemInfo": "システム情報",
@@ -53,7 +53,7 @@
     "save": "保存",
     "analyticsDisabled": "データ収集が無効化されています",
     "onlyBasic": "基本的な使用データのみ収集しています",
-    "analyticsEnabled": "Zの改善にご協力ありがとうございます！"
+    "analyticsEnabled": "Zenの改善にご協力ありがとうございます！"
   },
   "language": {
     "title": "言語",
@@ -79,6 +79,6 @@
     "contributor": "貢献者",
     "communityManager": "コミュニティマネージャー",
     "close": "閉じる",
-    "buildMessage": "このZビルドに尽力した人々："
+    "buildMessage": "このZenビルドに尽力した人々："
   }
 }
diff --git a/src/translations/ko.json b/src/translations/ko.json
index b983c6f..717aa53 100644
--- a/src/translations/ko.json
+++ b/src/translations/ko.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Z에 오신 것을 환영합니다",
+    "title": "Zen에 오신 것을 환영합니다",
     "tagline": "당신을 위한 빠르고 가벼운 에디터",
     "getStarted": "시작하기",
     "newProject": "새 프로젝트",
     "openProject": "프로젝트 열기",
     "cloneRepository": "저장소 복제",
-    "version": "Z",
+    "version": "Zen",
     "loading": "로딩 중...",
     "message": "파일을 열거나 새로 만들어 시작하세요",
     "openFile": "파일 열기",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "분석",
-    "modalTitle": "Z 개선에 도움을 주세요",
-    "modalIntro": "익명의 사용 데이터를 공유하여 Z를 개선하는 데 도움을 주세요. 공유할 정보를 선택할 수 있습니다:",
+    "modalTitle": "Zen 개선에 도움 주기",
+    "modalIntro": "익명 사용 데이터를 공유하여 Zen 개선에 도움을 주세요. 공유할 정보를 선택할 수 있습니다:",
     "basicInfo": "기본 사용 데이터",
     "basicDescription": "앱 버전, 빌드 정보, 운영체제 및 기본 사용 통계",
     "systemInfo": "시스템 정보",
@@ -53,7 +53,7 @@
     "save": "저장",
     "analyticsDisabled": "데이터 수집이 비활성화되었습니다",
     "onlyBasic": "기본 사용 데이터만 수집됩니다",
-    "analyticsEnabled": "Z 개선에 도움을 주셔서 감사합니다!"
+    "analyticsEnabled": "Zen 개선에 도움을 주셔서 감사합니다!"
   },
   "language": {
     "title": "언어",
@@ -79,6 +79,6 @@
     "contributor": "기여자",
     "communityManager": "커뮤니티 매니저",
     "close": "닫기",
-    "buildMessage": "다음 사람들이 이 Z 빌드를 위해 열심히 일했습니다:"
+    "buildMessage": "다음 사람들이 이 Zen 빌드를 위해 열심히 노력했습니다:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/pt.json b/src/translations/pt.json
index c285b63..a0a8981 100644
--- a/src/translations/pt.json
+++ b/src/translations/pt.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Bem-vindo ao Z",
+    "title": "Bem-vindo ao Zen",
     "tagline": "Editor rápido e leve para você",
     "getStarted": "Começar",
     "newProject": "Novo Projeto",
     "openProject": "Abrir Projeto",
     "cloneRepository": "Clonar Repositório",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Carregando...",
     "message": "Abra um arquivo ou crie um novo para começar",
     "openFile": "Abrir Arquivo",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Análise",
-    "modalTitle": "Ajude a Melhorar o Z",
-    "modalIntro": "Ajude-nos a melhorar o Z compartilhando dados anônimos de uso. Você pode escolher quais informações compartilhar:",
+    "modalTitle": "Ajude a melhorar o Zen",
+    "modalIntro": "Ajude-nos a melhorar o Zen compartilhando dados anônimos de uso. Você pode escolher quais informações compartilhar:",
     "basicInfo": "Dados Básicos de Uso",
     "basicDescription": "Versão do aplicativo, informações de build, sistema operacional e estatísticas básicas de uso",
     "systemInfo": "Informações do Sistema",
@@ -53,7 +53,7 @@
     "save": "Salvar",
     "analyticsDisabled": "Coleta de dados desativada",
     "onlyBasic": "Apenas dados básicos de uso são coletados",
-    "analyticsEnabled": "Obrigado por ajudar a melhorar o Z!"
+    "analyticsEnabled": "Obrigado por ajudar a melhorar o Zen!"
   },
   "language": {
     "title": "Idioma",
@@ -79,6 +79,6 @@
     "contributor": "Colaborador",
     "communityManager": "Gerente de Comunidade",
     "close": "Fechar",
-    "buildMessage": "As seguintes pessoas trabalharam arduamente nesta versão do Z:"
+    "buildMessage": "As seguintes pessoas trabalharam duro nesta versão do Zen:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/ru.json b/src/translations/ru.json
index ee6cc4f..3737c6d 100644
--- a/src/translations/ru.json
+++ b/src/translations/ru.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "Добро пожаловать в Z",
+    "title": "Добро пожаловать в Zen",
     "tagline": "Быстрый, легкий редактор для вас",
     "getStarted": "Начать работу",
     "newProject": "Новый проект",
     "openProject": "Открыть проект",
     "cloneRepository": "Клонировать репозиторий",
-    "version": "Z",
+    "version": "Zen",
     "loading": "Загрузка...",
     "message": "Откройте файл или создайте новый, чтобы начать",
     "openFile": "Открыть файл",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "Аналитика",
-    "modalTitle": "Помогите улучшить Z",
-    "modalIntro": "Помогите нам сделать Z лучше, поделившись анонимными данными об использовании. Вы можете выбрать, какой информацией поделиться:",
+    "modalTitle": "Помогите улучшить Zen",
+    "modalIntro": "Помогите нам сделать Zen лучше, поделившись анонимными данными об использовании. Вы можете выбрать, какой информацией поделиться:",
     "basicInfo": "Основные данные об использовании",
     "basicDescription": "Версия приложения, информация о сборке, операционная система и базовая статистика использования",
     "systemInfo": "Системная информация",
@@ -53,7 +53,7 @@
     "save": "Сохранить",
     "analyticsDisabled": "Сбор аналитики отключен",
     "onlyBasic": "Собираются только базовые данные об использовании",
-    "analyticsEnabled": "Спасибо за помощь в улучшении Z!"
+    "analyticsEnabled": "Спасибо за помощь в улучшении Zen!"
   },
   "language": {
     "title": "Язык",
@@ -80,6 +80,6 @@
     "contributor": "Участник",
     "communityManager": "Менеджер сообщества",
     "close": "Закрыть",
-    "buildMessage": "Над этим билдом Z усердно работали:"
+    "buildMessage": "Над этим билдом Zen усердно работали:"
   }
 } 
\ No newline at end of file
diff --git a/src/translations/z-rosetta-client.js b/src/translations/z-rosetta-client.js
index 3d262d9..93e4bd9 100644
--- a/src/translations/z-rosetta-client.js
+++ b/src/translations/z-rosetta-client.js
@@ -1,6 +1,6 @@
 /**
- * z-rosetta-client.js - Client-side multilingual support for Z applications
- * © 2024 Z Team
+ * z-rosetta-client.js - Client-side multilingual support for Zen applications
+ * © 2024 Zen Team
  * 
  * This module handles translations in the renderer process.
  */
diff --git a/src/translations/z-rosetta.js b/src/translations/z-rosetta.js
index 2577b32..706a525 100644
--- a/src/translations/z-rosetta.js
+++ b/src/translations/z-rosetta.js
@@ -1,6 +1,6 @@
 /**
- * z-rosetta.js - Multilingual support module for Z applications
- * © 2024 Z Team
+ * z-rosetta.js - Multilingual support module for Zen applications
+ * © 2024 Zen Team
  * 
  * This module handles loading, managing and applying translations across the application.
  */
@@ -26,10 +26,10 @@ class ZRosetta {
     if (this.initialized) return;
     
     try {
-      // Set up settings path in AppData/Local/Z/settings.json
+      // Set up settings path in AppData/Local/Zen/settings.json
       const appDataPath = path.join(process.env.APPDATA || 
         (process.platform === 'darwin' ? path.join(process.env.HOME, 'Library', 'Application Support') : 
-        path.join(process.env.HOME, '.local', 'share')), 'Z');
+        path.join(process.env.HOME, '.local', 'share')), 'Zen');
       
       // Ensure the directory exists
       if (!fs.existsSync(appDataPath)) {
diff --git a/src/translations/zh.json b/src/translations/zh.json
index 32f285a..d0fc037 100644
--- a/src/translations/zh.json
+++ b/src/translations/zh.json
@@ -1,12 +1,12 @@
 {
   "welcome": {
-    "title": "欢迎使用 Z",
+    "title": "欢迎使用 Zen",
     "tagline": "为您提供快速、轻量级的编辑器",
     "getStarted": "开始使用",
     "newProject": "新建项目",
     "openProject": "打开项目",
     "cloneRepository": "克隆仓库",
-    "version": "Z",
+    "version": "Zen",
     "loading": "加载中...",
     "message": "打开或创建一个文件以开始使用",
     "openFile": "打开文件",
@@ -34,8 +34,8 @@
   },
   "analytics": {
     "title": "数据分析",
-    "modalTitle": "帮助改进 Z",
-    "modalIntro": "通过分享匿名使用数据来帮助我们改进 Z。您可以选择要分享的信息：",
+    "modalTitle": "帮助改进 Zen",
+    "modalIntro": "通过共享匿名使用数据来帮助我们改进 Zen。您可以选择要共享的信息：",
     "basicInfo": "基础使用数据",
     "basicDescription": "应用版本、构建信息、操作系统和基本使用统计",
     "systemInfo": "系统信息",
@@ -53,7 +53,7 @@
     "save": "保存",
     "analyticsDisabled": "数据收集已禁用",
     "onlyBasic": "仅收集基础使用数据",
-    "analyticsEnabled": "感谢您帮助改进 Z！"
+    "analyticsEnabled": "感谢您帮助改进 Zen！"
   },
   "language": {
     "title": "语言",
@@ -79,6 +79,6 @@
     "contributor": "贡献者",
     "communityManager": "社区经理",
     "close": "关闭",
-    "buildMessage": "以下人员为这个Z版本付出了努力："
+    "buildMessage": "以下人员为这个 Zen 版本付出了努力："
   }
 } 
\ No newline at end of file
diff --git a/src/welcome.html b/src/welcome.html
index d31c686..7ed0010 100644
--- a/src/welcome.html
+++ b/src/welcome.html
@@ -3,7 +3,7 @@
 <head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Z</title>
+    <title>Zen</title>
     <!-- Add z-rosetta client script -->
     <script src="translations/z-rosetta-client.js"></script>
     <style>
@@ -196,7 +196,7 @@
             border-radius: 8px;
             padding: 12px 20px;
             cursor: pointer;
-            transition: all 180ms cubic-bezier(0.33, 1, 0.68, 1);
+            transition: background-color 180ms ease;
             display: flex;
             align-items: center;
             flex: 1;
@@ -206,7 +206,6 @@
             box-shadow: none;
             position: relative;
             overflow: hidden;
-            backdrop-filter: blur(4px);
         }
 
         .action-button::before {
@@ -216,30 +215,23 @@
             left: 0;
             right: 0;
             bottom: 0;
-            background: linear-gradient(135deg, 
-                        rgba(255, 255, 255, 0.1) 0%, 
-                        rgba(255, 255, 255, 0.05) 50%, 
-                        rgba(0, 0, 0, 0.02) 100%);
+            background: rgba(255, 255, 255, 0.05);
             opacity: 0;
-            transition: opacity 200ms ease, transform 200ms ease;
-            transform: translateY(4px);
+            transition: opacity 180ms ease;
         }
 
         .action-button:hover {
             background-color: var(--action-button-hover-bg);
-            transform: translateY(-2px);
-            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);
+            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
         }
 
         .action-button:hover::before {
             opacity: 1;
-            transform: translateY(0);
         }
 
         .action-button:active {
-            transform: translateY(0);
             background-color: var(--action-button-active-bg);
-            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
+            box-shadow: none;
             transition-duration: 100ms;
         }
 
@@ -248,11 +240,9 @@
             height: 18px;
             margin-right: 10px;
             color: var(--accent-color);
-            transition: transform 180ms ease;
         }
 
         .action-button:hover svg {
-            transform: scale(1.1);
         }
 
         .action-button-text {
@@ -348,8 +338,7 @@
             z-index: 1000;
             opacity: 0;
             pointer-events: none;
-            transition: opacity 0.2s ease;
-            backdrop-filter: blur(4px);
+            transition: opacity 0.15s linear;
         }
         
         .modal-overlay.active {
@@ -360,12 +349,12 @@
         .modal-content {
             background-color: var(--surface-color);
             border-radius: var(--border-radius);
-            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.16);
+            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.16);
             width: 580px;
             max-width: 95%;
             padding: 0;
             transform: translateY(10px) scale(0.98);
-            transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
+            transition: transform 0.2s ease-out;
             display: flex;
             flex-direction: column;
             overflow: hidden;
@@ -436,7 +425,7 @@
             margin-bottom: 10px;
             padding: 12px;
             border-radius: var(--border-radius);
-            transition: all 0.3s ease-in-out;
+            transition: all 0.2s ease-out;
             position: relative;
             overflow: hidden;
             border: 1px solid var(--border-color);
@@ -563,7 +552,7 @@
         
         /* Animation for checkboxes and analytics options */
         .analytics-option {
-            transition: all 0.3s ease-in-out;
+            transition: all 0.2s ease-out;
             position: relative;
             overflow: hidden;
         }
@@ -577,7 +566,7 @@
             bottom: 0;
             background-color: var(--accent-color);
             opacity: 0;
-            transition: opacity 0.3s ease;
+            transition: opacity 0.2s ease;
             z-index: -1;
         }
         
@@ -632,7 +621,7 @@
         }
         
         .modal-button:focus:not(:active)::after {
-            animation: ripple 1s ease-out;
+            animation: ripple 0.8s ease-out;
         }
         
         @keyframes ripple {
@@ -640,13 +629,9 @@
                 transform: scale(0, 0);
                 opacity: 0.5;
             }
-            20% {
-                transform: scale(25, 25);
-                opacity: 0.3;
-            }
             100% {
                 opacity: 0;
-                transform: scale(40, 40);
+                transform: scale(20, 20);
             }
         }
         
@@ -869,7 +854,6 @@
         }
 
         .contributor-item:hover {
-            transform: translateY(-2px);
             background: var(--action-button-bg);
             box-shadow: var(--shadow-sm);
         }
@@ -1075,7 +1059,6 @@
         }
 
         .contributor-item:hover {
-            transform: translateY(-2px);
             background: var(--action-button-bg);
             box-shadow: var(--shadow-sm);
         }
@@ -1142,14 +1125,14 @@
                 <div class="window-control control-minimize" id="minimize-btn"></div>
                 <div class="window-control control-maximize" id="maximize-btn"></div>
             </div>
-            <div class="window-title">Z</div>
+            <div class="window-title">Zen</div>
         </div>
 
         <!-- Main Content -->
         <div class="content">
             <div class="welcome-container">
-                <img src="assets/Z-dev-logo.svg" alt="Z Logo" class="logo">
-                <h1 class="welcome-title" data-z-rosetta="welcome.title">Welcome to Z</h1>
+                <img src="assets/Z-dev-logo.svg" alt="Zen Logo" class="logo">
+                <h1 class="welcome-title" data-z-rosetta="welcome.title">Welcome to Zen</h1>
                 <p class="welcome-tagline" data-z-rosetta="welcome.tagline">Fast, lightweight editor for you</p>
                 
                 <div class="action-buttons-container">
@@ -1185,7 +1168,7 @@
             
             <div class="version-info">
                 <div class="version-left">
-                    <span data-z-rosetta="welcome.version">Z</span> <span id="full-version">0.1.0-dev</span> • <span id="build-code" class="build-code">loading...</span>
+                    <span data-z-rosetta="welcome.version">Zen</span> <span id="full-version">0.1.0-dev</span> • <span id="build-code" class="build-code">loading...</span>
                 </div>
                 <div class="version-right">
                     <div class="analytics-toggle" id="analytics-toggle">
@@ -1215,7 +1198,7 @@
                         <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                         <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                     </svg>
-                    <h3 class="modal-title" data-z-rosetta="analytics.modalTitle">Help improve Z</h3>
+                    <h3 class="modal-title" data-z-rosetta="analytics.modalTitle">Help improve Zen</h3>
                 </div>
                 <div class="modal-body">
                     <!-- Left Column -->
@@ -1229,7 +1212,7 @@
                                 <input type="checkbox" id="analytics-basic" class="analytics-checkbox" checked>
                                 <div class="analytics-label">
                                     <h4 data-z-rosetta="analytics.basicInfo">Basic Information</h4>
-                                    <p data-z-rosetta="analytics.basicDescription">Z version, build code, OS info, usage frequency</p>
+                                    <p data-z-rosetta="analytics.basicDescription">Zen version, build code, OS info, usage frequency</p>
                                 </div>
                             </div>
                             
@@ -1382,7 +1365,7 @@
                     <!-- Core Team -->
                     <div class="contributor-group">
                         <h4 class="contributor-group-title" data-z-rosetta="contributors.coreTeam">Core Team</h4>
-                        <p class="contributor-group-description" data-z-rosetta="contributors.buildMessage" style="margin-bottom: 16px; color: var(--muted-color);">Над этим билдом Z усердно работали:</p>
+                        <p class="contributor-group-description" data-z-rosetta="contributors.buildMessage" style="margin-bottom: 16px; color: var(--muted-color);">Над этим билдом Zen усердно работали:</p>
                         <div class="contributor-items">
                             <div class="contributor-item">
                                 <div class="contributor-avatar">
@@ -1694,8 +1677,7 @@
                     document.getElementById('preview-os').textContent = buildInfo.currentOS || 'Unknown';
                     document.getElementById('preview-arch').textContent = buildInfo.architecture || 'Unknown';
                     
-                    // Set a placeholder for screen resolution
-                    // In a real app, you would get actual screen resolution
+
                     const screenWidth = window.screen.width;
                     const screenHeight = window.screen.height;
                     document.getElementById('preview-resolution').textContent = `${screenWidth}x${screenHeight}`;
diff --git a/test.rs b/test.rs
index 8363c09..cce4026 100644
--- a/test.rs
+++ b/test.rs
@@ -5,12 +5,14 @@ use std::time::{Duration, Instant};
 // Define error types for our application
 #[derive(Debug)]
 enum AppError {
-    InvalidInput(String),
+    InvalidInput(S tring),
     ProcessingFailed(String),
     DatabaseError(String),
     NetworkError(String),
 }
 
+// Picun F6
+
 // Define a struct to represent a user in our system
 #[derive(Debug, Clone)]
 struct User {
